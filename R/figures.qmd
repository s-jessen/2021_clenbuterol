---
title: "for"
format: html
editor: source
self-contained: true
---

Load libraries
```{r, include = FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error=FALSE)
source(here::here("R/libraries.R"))
source(here::here("R/colors.R"))
source(here::here("R/functions.R"))
```

Load data
```{r}
df <- readxl::read_excel(here::here('data-raw/clen_data.xlsx')) %>% 
    dplyr::mutate(id = as.factor(id)) %>% 
    dplyr::mutate(trial = as.numeric(trial)) %>%
    dplyr::mutate(time = factor(time, levels = c("pre", "post"))) %>%
    dplyr::mutate(treatment = factor(treatment, levels = c("PLA", "CLEN"))) %>%
    dplyr::group_by(id) %>% 
    #Delta compared to first trial
    dplyr::mutate(delta_lean_carry_over = lean - lean[trial == "1"]) %>%
    dplyr::mutate(delta_fat_carry_over = fat - fat[trial == "1"]) %>%
    dplyr::mutate(delta_vo2max_carry_over = vo2max - vo2max[trial == "1"]) %>%
    dplyr::ungroup() %>% 
    dplyr::group_by(id, treatment) %>% 
    #Whole body
    dplyr::mutate(delta_lean = lean - lean[time == "pre"]) %>%
    dplyr::mutate(delta_fat = fat - fat[time == "pre"]) %>% 
    dplyr::mutate(delta_fat_p = fat_p - fat_p[time == "pre"]) %>% 
    #Leg
    dplyr::mutate(delta_leg_lean = leg_lean - leg_lean[time == "pre"]) %>%
    dplyr::mutate(delta_leg_fat = leg_fat - leg_fat[time == "pre"]) %>% 
    dplyr::mutate(delta_leg_fat_p = leg_fat_p - leg_fat_p[time == "pre"]) %>% 
    #Arm
    dplyr::mutate(delta_arm_lean = arm_lean - arm_lean[time == "pre"]) %>%
    dplyr::mutate(delta_arm_fat = arm_fat - arm_fat[time == "pre"]) %>% 
    dplyr::mutate(delta_arm_fat_p = arm_fat_p - arm_fat_p[time == "pre"]) %>% 
    #Torso
    dplyr::mutate(delta_torso_lean = torso_lean - torso_lean[time == "pre"]) %>%
    dplyr::mutate(delta_torso_fat = torso_fat - torso_fat[time == "pre"]) %>% 
    dplyr::mutate(delta_torso_fat_p = torso_fat_p - torso_fat_p[time == "pre"]) %>%
    #Aerobic
    dplyr::mutate(delta_vo2max = vo2max - vo2max[time == "pre"]) %>% 
    dplyr::mutate(delta_kondital = kondital - kondital[time == "pre"]) %>% 
    dplyr::mutate(delta_ippo = ippo - ippo[time == "pre"]) %>% 
    dplyr::mutate(delta_appo = appo - appo[time == "pre"]) %>%
    #Anaerobic
    dplyr::mutate(delta_ppo = ppo - ppo[time == "pre"]) %>%
    dplyr::mutate(delta_mpo = mpo - mpo[time == "pre"]) %>%
    #Cardiac
    dplyr::mutate(delta_lv_mass = lv_mass - lv_mass[time == "pre"]) %>% 
    dplyr::mutate(delta_lv_sv = lv_sv - lv_sv[time == "pre"]) %>% 
    dplyr::mutate(delta_hr = hr - hr[time == "pre"]) %>% 
    dplyr::mutate(delta_co = co - co[time == "pre"]) %>% 
    dplyr::mutate(delta_ef = ef - ef[time == "pre"]) %>% 
    #MVC
    dplyr::mutate(delta_mvc = mvc - mvc[time == "pre"]) %>% 
    dplyr::mutate(delta_tpot = tpot - tpot[time == "pre"]) %>% 
    dplyr::mutate(delta_tpt = tpt - tpt[time == "pre"]) %>% 
    dplyr::mutate(delta_hrt = hrt - hrt[time == "pre"]) %>% 
    dplyr::mutate(delta_va = va - va[time == "pre"]) %>%
    #Ungroup
    dplyr::ungroup()
    
```

#Regular figs
Whole body comp
```{r}
#Prepare data
body_comp <- df %>% 
    dplyr::filter(time == "post") %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_lean",
        "delta_fat",
        "delta_fat_p")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(
        tissue = case_when(
            stringr::str_detect(variable, "lean$") ~ "lean",
            stringr::str_detect(variable, "fat$") ~ "fat",
            stringr::str_detect(variable, "fat_p$") ~ "fat_p")
        ) %>% 
    dplyr::mutate(tissue = factor(tissue,
                                     levels = c("lean",
                                                "fat",
                                                "fat_p")))

#Plot
body_comp %>%
    ggplot2::ggplot(aes(x = treatment, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6)+
    geom_point(size = 1.5,
               shape = 16,
               #position = position_jitter(width = 0.05),
               color = "black",
               alpha = 0.25)+
    geom_line(aes(group = id),
              alpha = 0.1,
              linewidth = 0.2)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside",  # Move strip labels outside plotting area
        strip.text = element_text(size = 10,
                                  face = "bold")
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
        facet_wrap(~tissue,
               scales = "free_y",
               labeller = as_labeller(c(
                   lean = "Lean (kg)",
                   fat = "Fat (kg)",
                   fat_p = "Fat (%.)")))

ggsave(here::here('data/figures/layouts/body_comp_layout.svg'), width = 150, height = 50, units = "mm")

```

Regional body comp
```{r}
#Prepare data
body_comp <- df %>% 
    dplyr::filter(time == "post") %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_leg_lean",
        "delta_leg_fat",
        "delta_leg_fat_p",
        "delta_arm_lean",
        "delta_arm_fat",
        "delta_arm_fat_p",
        "delta_torso_lean",
        "delta_torso_fat",
        "delta_torso_fat_p")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(
        body_part = case_when(
            stringr::str_detect(variable, "^delta_arm") ~ "arm",
            stringr::str_detect(variable, "^delta_leg") ~ "leg",
            stringr::str_detect(variable, "^delta_torso") ~ "torso"),
        tissue = case_when(
            stringr::str_detect(variable, "lean$") ~ "lean",
            stringr::str_detect(variable, "fat$") ~ "fat",
            stringr::str_detect(variable, "fat_p$") ~ "fat_p")
        ) %>% 
    dplyr::mutate(body_part = factor(body_part,
                                     levels = c("torso",
                                                "arm",
                                                "leg"))) %>% 
    dplyr::mutate(tissue = factor(tissue,
                                     levels = c("lean",
                                                "fat",
                                                "fat_p")))

#Plot
body_comp %>%
    ggplot2::ggplot(aes(x = treatment, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6)+
    geom_point(size = 1.5,
               shape = 16,
               #position = position_jitter(width = 0.05),
               color = "black",
               alpha = 0.25)+
    geom_line(aes(group = id),
              alpha = 0.1,
              linewidth = 0.2)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside",  # Move strip labels outside plotting area
        strip.text = element_text(size = 10)
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
    facet_grid(tissue ~ body_part,
               switch = "y",
               scales = "free_y",
               labeller = as_labeller(c(
                   lean = "Lean (kg)",
                   fat = "Fat (kg)",
                   fat_p = "Fat (%.)",
                   arm = "Arms",
                   torso = "Torso",
                   leg = "Leg")))

ggsave(here::here('data/figures/layouts/regional_body_comp_layout.svg'), width = 150, height = 100, units = "mm")

```

Regional body comp (tissue on x-axis; absolute values)
```{r}
#Prepare data
body_comp <- df %>% 
    dplyr::filter(time == "post") %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_leg_lean",
        "delta_leg_fat",
        "delta_leg_fat_p",
        "delta_arm_lean",
        "delta_arm_fat",
        "delta_arm_fat_p",
        "delta_torso_lean",
        "delta_torso_fat",
        "delta_torso_fat_p")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(
        body_part = case_when(
            stringr::str_detect(variable, "^delta_arm") ~ "arm",
            stringr::str_detect(variable, "^delta_leg") ~ "leg",
            stringr::str_detect(variable, "^delta_torso") ~ "torso"),
        tissue = case_when(
            stringr::str_detect(variable, "lean$") ~ "lean",
            stringr::str_detect(variable, "fat$") ~ "fat",
            stringr::str_detect(variable, "fat_p$") ~ "fat_p")
        ) %>% 
    dplyr::mutate(body_part = factor(body_part,
                                     levels = c("torso",
                                                "leg",
                                                "arm"))) %>% 
    dplyr::mutate(tissue = factor(tissue,
                                     levels = c("lean",
                                                "fat",
                                                "fat_p")))

#Plot
body_comp %>%
    ggplot2::ggplot(aes(x = body_part, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6,
        position = position_dodge(width = 0.6))+
    geom_point(size = 1.5,
               shape = 16,
               position = position_dodge(width = 0.6),
               color = "black",
               alpha = 0.25)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside", 
        strip.text = element_text(size = 10,
                                  face = "bold")
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    scale_x_discrete(labels = c(
        arm = "Arms",
        torso = "Torso",
        leg = "Leg"))+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
    facet_wrap(~tissue,
               #switch = "y",
               scales = "free_y",
               labeller = as_labeller(c(
                   lean = "Lean (kg)",
                   fat = "Fat (kg)",
                   fat_p = "Fat (%.)")))

ggsave(here::here('data/figures/layouts/regional_body_comp_layout.svg'), width = 150, height = 50, units = "mm")

```

Aerobic
```{r}
#Prepare data
aerobic <- df %>% 
    dplyr::filter(time == "post") %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_vo2max",
        "delta_appo",
        "delta_ippo",
        "delta_kondital")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(variable = factor(variable, 
                                    levels = c("delta_ippo",
                                               "delta_appo",
                                               "delta_vo2max",
                                               "delta_kondital"
                                               )))

#Plot
aerobic %>%
    ggplot2::ggplot(aes(x = treatment, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6)+
    geom_point(size = 1.5,
               shape = 16,
               #position = position_jitter(width = 0.05),
               color = "black",
               alpha = 0.25)+
    geom_line(aes(group = id),
              alpha = 0.1,
              linewidth = 0.2)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside",  # Move strip labels outside plotting area
        strip.text = element_text(size = 10)
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.35))) +
    facet_wrap(~ variable,
               scales = "free_y",
               ncol = 4,
               labeller = as_labeller(c(
                   delta_vo2max = "VO2max (mL/min)",
                   delta_kondital = "VO2max (mL/min/kg)",
                   delta_appo = "Aerobic Wmax (W)",  
                   delta_ippo = "Wmax (W)")))

ggsave(here::here('data/figures/layouts/aerobic_layout.svg'), width = 200, height = 50, units = "mm")
```

MVC
```{r}
#Prepare data
mvc <- df %>% 
    dplyr::filter(time == "post") %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_mvc",
        "delta_tpot",
        "delta_tpt",
        "delta_hrt",
        "delta_va")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(variable = factor(variable, 
                                    levels = c("delta_mvc",
                                               "delta_tpot",
                                               "delta_tpt",
                                               "delta_hrt",
                                               "delta_va")))

#Plot
mvc %>%
    ggplot2::ggplot(aes(x = treatment, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6)+
    geom_point(size = 1.5,
               shape = 16,
               position = position_jitter(width = 0.05),
               color = "black",
               alpha = 0.25)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside",  # Move strip labels outside plotting area
        strip.text = element_text(size = 10)
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
    facet_wrap(~ variable,
               scales = "free_y",
               ncol = 5,
               labeller = as_labeller(c(
                   "delta_mvc" = "MVC (Nm)",
                   "delta_tpot" = "Potentiated\ntwitch (Nm)",
                   "delta_tpt" = "Time to\npeak twitch (ms)",
                   "delta_hrt" = "Half\nrelaxation time (ms)",
                   "delta_va" = "Voluntary\nactivation (%)")))

ggsave(here::here('data/figures/layouts/mvc_layout.svg'), width = 200, height = 50, units = "mm")
```

Anaerobic
```{r}
#Prepare data
anaerobic <- df %>% 
    dplyr::filter(time == "post") %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_ppo",
        "delta_mpo")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(variable = factor(variable, 
                                    levels = c(
                                        "delta_ppo",
                                        "delta_mpo")))

#Plot
anaerobic %>%
    ggplot2::ggplot(aes(x = treatment, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6)+
    geom_point(size = 1.5,
               shape = 16,
               position = position_jitter(width = 0.05),
               color = "black",
               alpha = 0.25)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside",  # Move strip labels outside plotting area
        strip.text = element_text(size = 10)
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
    facet_wrap(~ variable,
               scales = "free_y",
               ncol = 5,
               labeller = as_labeller(c(
                   "delta_mpo" = "Mean power output (W)",
                   "delta_ppo" = "Peak power output (W)")))

ggsave(here::here('data/figures/layouts/sprint_layout.svg'), width = 100, height = 50, units = "mm")
```

Sprint table
```{r}
df %>% 
    dplyr::filter(!(id == "10" & treatment == "CLEN")) %>%  
    dplyr::group_by(treatment, time) %>% 
    dplyr::summarize(
        mean_ppo = mean(ppo, na.rm = T),
        sd_ppo = sd(ppo, na.rm = T),
        mean_mpo = mean(mpo, na.rm = T),
        sd_mpo = sd(mpo, na.rm = T)
    ) %>% 
    dplyr::ungroup()
```


