---
title: "for"
format: html
editor: source
self-contained: true
---

Load libraries
```{r, include = FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error=FALSE)
source(here::here("R/libraries.R"))
source(here::here("R/colors.R"))
source(here::here("R/functions.R"))
```

Load data
```{r}
df <- readxl::read_excel(here::here('data-raw/clen_enzymes.xlsx')) %>% 
    dplyr::mutate(id = as.factor(id)) %>% 
    dplyr::mutate(trial = as.numeric(trial)) %>%
    dplyr::mutate(time = factor(time, levels = c("pre", "post")))

#Retrieve treatments
treatments <- readxl::read_excel(here::here('data-raw/clen_data.xlsx'))

#Merge
df <- df %>% 
    merge(treatments[,c("id", "trial", "treatment")], by = c("id", "trial"))

#Calc delta's
df_delta <- df %>% 
    dplyr::group_by(id, treatment) %>% 
    dplyr::mutate(delta_cs_protein = cs_protein - cs_protein[time == "pre"]) %>%
    dplyr::mutate(delta_cs_weight = cs_weight - cs_weight[time == "pre"]) %>% 
    dplyr::mutate(delta_had_protein = had_protein - had_protein[time == "pre"]) %>% 
    dplyr::mutate(delta_had_weight = had_weight - had_weight[time == "pre"]) %>% 
    dplyr::ungroup() %>% 
    dplyr::filter(time == "post")
    
```

Enzyme data
```{r}
#Prepare data
enzymes <- df_delta %>% 
    dplyr::select(c(
        "id",
        "treatment",
        "delta_cs_weight",
        "delta_cs_protein",
        "delta_had_weight",
        "delta_had_protein")) %>% 
    tidyr::pivot_longer(
        cols = -c(id, treatment),
        names_to = "variable",
        values_to = "change"
    ) %>% 
    dplyr::mutate(
        variable = factor(variable, levels =c(
            "delta_cs_protein",
            "delta_cs_weight",
            "delta_had_protein",
            "delta_had_weight"
        ))
    )

#Plot
enzymes %>%
    ggplot2::ggplot(aes(x = treatment, y = change, fill = treatment))+
    geom_bar(
        stat = "summary",
        fun = "mean",
        color = NA,
        width = 0.6)+
    geom_point(size = 1.5,
               shape = 16,
               #position = position_jitter(width = 0.05),
               color = "black",
               alpha = 0.25)+
    geom_line(aes(group = id),
              alpha = 0.1,
              linewidth = 0.2)+
    geom_hline(yintercept = 0, linetype = "dashed", linewidth = 0.25)+
    theme(
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.25),
        panel.grid.minor=element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_blank(),
        axis.line = element_blank(),
        axis.text = element_text(color = "black", size = 10),
        text = element_text(size = 10, family="Source Sans Pro", color = "black"),
        axis.title = element_text(size = 10, family="Source Sans Pro"),
        axis.text.x = element_text(size = 10),
        legend.position = "none",
        legend.title = element_blank(),
        legend.key = element_blank(),
        legend.key.size = (unit(3, "mm")),
        legend.background = element_blank(),
        legend.box.background = element_blank(),
        title = element_text(size = 6),
        strip.background = element_blank(),
        strip.placement = "outside",
        strip.text = element_text(size = 10,
                                  face = "bold")
    )+
    scale_fill_manual(
        values = c("PLA" = pla_color, "CLEN" = clen_color)
    )+
    labs(x = NULL,
         y = "Change (post - pre)")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
        facet_wrap(~variable,
               scales = "free_y",
               labeller = as_labeller(c(
                   delta_cs_weight = "CS (µmol/g d.w./min)",
                   delta_cs_protein = "CS (µmol/g protein/min)",
                   delta_had_weight = "HAD (µmol/g d.w./min)",
                   delta_had_protein = "HAD (µmol/g protein/min)"
                   )))

ggsave(here::here('data/figures/layouts/enzymes_layout.svg'), width = 150, height = 100, units = "mm")

```

Table
```{r}
summary <- df %>% 
    dplyr::group_by(time, treatment) %>% 
    dplyr::summarize(
        mean_hct_perc = round(mean(hct_perc), 1),
        sd_hct_perc = round(sd(hct_perc), 1),
        mean_hb_mass = round(mean(hb_mass), 0),
        sd_hb_mass = round(sd(hb_mass), 0),
        mean_rbc_volume = round(mean(rbc_volume), 0),
        sd_rbc_volume = round(sd(rbc_volume), 0),
        mean_plasma_volume = round(mean(plasma_volume), 0),
        sd_plasma_volume = round(sd(plasma_volume), 0),
        mean_blood_volume = round(mean(blood_volume), 0),
        sd_blood_volume = round(sd(blood_volume), 0)
        ) %>% 
    tidyr::pivot_longer(
        cols = -c("time", "treatment"),
        names_to = "variable",
        values_to = "value"
    )
```


